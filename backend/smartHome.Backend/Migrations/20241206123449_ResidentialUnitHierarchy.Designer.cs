// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHome.backend.Data;

#nullable disable

namespace smartHome.Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241206123449_ResidentialUnitHierarchy")]
    partial class ResidentialUnitHierarchy
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartHome.backend.Models.ApartmentComplex", b =>
                {
                    b.Property<int>("ApartmentComplexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApartmentComplexId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApartmentComplexId");

                    b.ToTable("ApartmentComplexes");
                });

            modelBuilder.Entity("SmartHome.backend.Models.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceId"));

                    b.Property<double>("EnergyConsumptionRate")
                        .HasColumnType("float");

                    b.Property<bool>("IsOn")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResidentialUnitId")
                        .HasColumnType("int");

                    b.HasKey("DeviceId");

                    b.HasIndex("ResidentialUnitId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SmartHome.backend.Models.EnergyData", b =>
                {
                    b.Property<int>("EnergyDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnergyDataId"));

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalEnergyConsumed")
                        .HasColumnType("float");

                    b.HasKey("EnergyDataId");

                    b.ToTable("EnergyData");
                });

            modelBuilder.Entity("SmartHome.backend.Models.ResidentialUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidentialUnitType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("Id");

                    b.ToTable("ResidentialUnit");

                    b.HasDiscriminator<string>("ResidentialUnitType").HasValue("ResidentialUnit");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SmartHome.backend.Models.Apartment", b =>
                {
                    b.HasBaseType("SmartHome.backend.Models.ResidentialUnit");

                    b.Property<int>("ApartmentComplexId")
                        .HasColumnType("int");

                    b.HasIndex("ApartmentComplexId");

                    b.HasDiscriminator().HasValue("Apartment");
                });

            modelBuilder.Entity("SmartHome.backend.Models.House", b =>
                {
                    b.HasBaseType("SmartHome.backend.Models.ResidentialUnit");

                    b.HasDiscriminator().HasValue("House");
                });

            modelBuilder.Entity("SmartHome.backend.Models.Device", b =>
                {
                    b.HasOne("SmartHome.backend.Models.ResidentialUnit", "ResidentialUnit")
                        .WithMany("Devices")
                        .HasForeignKey("ResidentialUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResidentialUnit");
                });

            modelBuilder.Entity("SmartHome.backend.Models.Apartment", b =>
                {
                    b.HasOne("SmartHome.backend.Models.ApartmentComplex", "ApartmentComplex")
                        .WithMany("Apartments")
                        .HasForeignKey("ApartmentComplexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApartmentComplex");
                });

            modelBuilder.Entity("SmartHome.backend.Models.ApartmentComplex", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("SmartHome.backend.Models.ResidentialUnit", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
